Index: src/main/java/com/example/gestionticket/services/CartServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gestionticket.services;\n\nimport com.example.gestionticket.Entities.Cart;\nimport com.example.gestionticket.Entities.CartItem;\nimport com.example.gestionticket.Entities.CartItemDetails;\nimport com.example.gestionticket.Entities.Evenement;\nimport com.example.gestionticket.Repository.CartRepository;\nimport com.example.gestionticket.Repository.CartItemRepository;\nimport com.example.gestionticket.Repository.EvenementRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.Optional;\n\n@Service\npublic class CartServiceImpl implements CartService {\n\n    private final CartRepository cartRepository;\n    private final CartItemRepository cartItemRepository;\n    private final EvenementRepository evenementRepository;\n\n    @Autowired\n    public CartServiceImpl(CartRepository cartRepository, CartItemRepository cartItemRepository, EvenementRepository evenementRepository) {\n        this.cartRepository = cartRepository;\n        this.cartItemRepository = cartItemRepository;\n        this.evenementRepository = evenementRepository;\n    }\n\n    @Override\n    public Cart getCartByUser(Long userId) {\n        return cartRepository.findByUserId(userId);\n    }\n\n    @Override\n    public CartItem addEvenementToCart(Long cartId, Evenement evenement, int quantity) {\n        return null;\n    }\n\n    @Override\n    public CartItem addEvenementToCart(Long cartId, Long evenementId, int quantity) {\n        Cart cart = cartRepository.findById(cartId).orElseThrow(() -> new RuntimeException(\"Cart not found\"));\n        Evenement evenement = evenementRepository.findById(evenementId).orElseThrow(() -> new RuntimeException(\"Evenement not found\"));\n        CartItem cartItem = new CartItem();\n        cartItem.setCart(cart);\n        cartItem.setEvenement(evenement);\n        cartItem.setQuantity(quantity);\n        cartItem.setPrice(evenement.getPrice() * quantity);\n        return cartItemRepository.save(cartItem);\n}\n    @Override\n    public CartItemDetails getCartItemDetails(Long cartItemId) {\n        CartItem cartItem = cartItemRepository.findById(cartItemId).orElseThrow(() -> new RuntimeException(\"CartItem not found\"));\n        String titre = cartItem.getEvenement().getTitre();\n        String description = cartItem.getEvenement().getDescription();\n        return new CartItemDetails(titre, description, cartItem.getQuantity(), cartItem.getPrice());\n    }\n    @Override\npublic void removeEvenementFromCart(Long cartId, Long evenementId) {\n    Cart cart = cartRepository.findById(cartId).orElseThrow(() -> new RuntimeException(\"Cart not found\"));\n    Optional<CartItem> cartItem = cart.getItems().stream().filter(item -> item.getEvent().getId().equals(evenementId)).findFirst();\n    cartItem.ifPresent(cartItemRepository::delete);\n}\n\n    @Override\n    public double calculateTotalPrice(Long cartId) {\n        Cart cart = cartRepository.findById(cartId).orElseThrow(() -> new RuntimeException(\"Cart not found\"));\n        return cart.getItems().stream().mapToDouble(CartItem::getPrice).sum();\n    }\n}\n// Path: src/main/java/com/example/gestionticket/services/CartService.java
===================================================================
diff --git a/src/main/java/com/example/gestionticket/services/CartServiceImpl.java b/src/main/java/com/example/gestionticket/services/CartServiceImpl.java
--- a/src/main/java/com/example/gestionticket/services/CartServiceImpl.java	
+++ b/src/main/java/com/example/gestionticket/services/CartServiceImpl.java	
@@ -44,7 +44,6 @@
         cartItem.setCart(cart);
         cartItem.setEvenement(evenement);
         cartItem.setQuantity(quantity);
-        cartItem.setPrice(evenement.getPrice() * quantity);
         return cartItemRepository.save(cartItem);
 }
     @Override
